{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","data","console","log","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1226d712.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL:process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);  \r\n\r\nexport const firebaseInstance =firebase;\r\n\r\nexport const authService =firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm =() =>{\r\n    const [email,setEmail] =useState(\"\");\r\n    const [password,setPassword] =useState(\"\");\r\n    const [newAccount,setNewAccount] =useState(true);\r\n    const [error,setError]=useState(\"\");\r\n\r\n    const onChange =(event) =>{\r\n        const {target:{name,value}}=event;\r\n       \r\n        if(name === \"email\"){\r\n            setEmail(value)\r\n        }else if(name===\"password\"){\r\n            setPassword(value);\r\n        }\r\n    }\r\n    const onSubmit =async (event)=>{\r\n        event.preventDefault();\r\n        let data;\r\n        try{\r\n            if(newAccount){\r\n                 data = await authService.createUserWithEmailAndPassword(email,password);\r\n            }else{\r\n                 data = await authService.signInWithEmailAndPassword(email,password);  \r\n            }\r\n             \r\n        }catch(error){\r\n            setError(error.message);\r\n        }   \r\n    }\r\n\r\n    const toggleAccount =()=> setNewAccount(prev=> !prev);\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email}  onChange={onChange} className=\"authInput\"/>\r\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\"/>\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\" } className=\"authInput authSubmit\"/>   \r\n            {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Sign in\" :\"Create Account\"}</span>\r\n         </>\r\n    )\r\n\r\n}\r\nexport default AuthForm;","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\n\r\nconst Auth =  ()=>{\r\n \r\n    const onSocialClick =async (event)=>{\r\n        const {target:{name}}=event;\r\n        let provider;\r\n        if(name === \"google\"){\r\n            provider= new firebaseInstance.auth.GoogleAuthProvider();\r\n        }else if(name===\"github\"){\r\n            provider =new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data =await authService.signInWithPopup(provider);\r\n        console.log(data);\r\n    }\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n            icon={faTwitter}\r\n            color={\"#04AAFF\"}\r\n            size=\"3x\"\r\n            style={{ marginBottom: 30 }}\r\n            />\r\n        <AuthForm/>\r\n        <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />   </button>\r\n        </div>     \r\n    </div>\r\n    );\r\n} \r\n\r\n\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet =({nweetObj ,isOwner }) => {\r\n    const [editing,setEditing]=useState(false);\r\n    const[newNweet,setNewNweet] =useState(nweetObj.text);\r\n    const onDeleteClick =async ()=>{\r\n        const ok =window.confirm(\"Are you sure you want to delete this nweet?\");\r\n       \r\n        if(ok){\r\n           await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n           await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n           //refFromURl은  url을 주면 reference를 얻을 수 있다. \r\n        }\r\n    };\r\n    const toggleEditing =()=>setEditing(prev=> !prev);\r\n    const onSubmit =async (event)=>{\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text:newNweet,\r\n        });\r\n        setEditing(false);\r\n    }\r\n    \r\n    const onChange = (event)=>{\r\n        const {target:{value}}=event;\r\n        setNewNweet(value);\r\n\r\n    }\r\n\r\n\r\n\r\n return (\r\n    <div className=\"nweet\">\r\n       {\r\n           editing ? \r\n           <>\r\n             {isOwner && <> \r\n             <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n               <input onChange={onChange} type=\"text\" placeholder=\"Edit your nweet\" value={newNweet} required autoFocus className=\"formInput\"/>\r\n                <input type=\"submit\" value=\"Update Nweet\"  className=\"formBtn\" />   \r\n            </form> \r\n            <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n           </>}\r\n           </>\r\n           :\r\n           \r\n           <>\r\n           <h4 >{nweetObj.text}</h4>\r\n           {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl}/>}\r\n           { isOwner && (\r\n                <div class=\"nweet__actions\">\r\n                <span onClick={onDeleteClick}>\r\n                    <FontAwesomeIcon icon={faTrash} />\r\n                </span>\r\n                <span onClick={toggleEditing}>\r\n                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                </span>\r\n                </div>\r\n           )\r\n           }\r\n           </>   \r\n       }\r\n    </div>\r\n\r\n)\r\n\r\n\r\n\r\n}\r\n\r\nexport default Nweet;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({userObj}) =>{\r\n\r\n    const [nweet,setNweet] =useState(\"\");\r\n    const [attachment,setAttachment]=useState(\"\");\r\n\r\n    const onSubmit =async (event) =>{ // 먼저 사진이 있으면 올리고 그 URL을 받아서 그걸 nweet에 넣는다.\r\n        \r\n        if (nweet === \"\") {\r\n            return;\r\n          }\r\n        \r\n        event.preventDefault();\r\n        let attachmentUrl =\"\";\r\n        if(attachment !== \"\"){\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);        \r\n            const response = await attachmentRef.putString(attachment,\"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj ={\r\n            text:nweet,\r\n            createdAt:Date.now(),\r\n            creatorId:userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n       await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange =(event)=>{\r\n        const{target:{value}} =event;\r\n        setNweet(value);\r\n    }\r\n\r\n    const onFileChange =(event)=>{\r\n        const {target :{files}}= event;\r\n        const theFile =files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend=(finishedEvent)=>{\r\n            const {currentTarget : {result}} =finishedEvent;\r\n            setAttachment(result);\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n\r\n    const onClearAttachment =() =>setAttachment(\"\");\r\n\r\n\r\n    return (      \r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n            <input\r\n                className=\"factoryInput__input\"\r\n                value={nweet}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"What's on your mind?\"\r\n                maxLength={120}\r\n            />\r\n            <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n            <span>Add photos</span>\r\n            <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n        <input id=\"attach-file\"\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={onFileChange}\r\n            style={{\r\n            opacity: 0,\r\n        }} />\r\n       \r\n        {attachment &&  <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n            </div>    \r\n        }\r\n    </form>)\r\n\r\n}\r\n\r\nexport default NweetFactory;","import Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nimport { dbService} from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\nconst Home = ({userObj})=> {\r\n    \r\n    const [nweets,setNweets] =useState([]);\r\n   \r\n    useEffect(()=>{\r\n       \r\n      dbService.collection(\"nweets\").onSnapshot(snapshot=>{\r\n          const nweetArray =snapshot.docs.map(doc=> ({id:doc.id, ...doc.data()}))\r\n          setNweets(nweetArray);\r\n      }); \r\n    },[])\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj}/>\r\n            <div style={{marginTop:30}} >\r\n                {nweets.map(nweet => <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid}></Nweet>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation =({userObj})=> <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li> \r\n            <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n            </Link>\r\n        </li>\r\n        <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link> \r\n        </li>\r\n    </ul>\r\n\r\n</nav>\r\n\r\nexport default Navigation;","import { authService, dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst Profile = ({refreshUser,userObj})=>{\r\n    const history = useHistory();\r\n    const [newDisplayName,setNewDisplayName] = useState(userObj.displayName);\r\n     const onLogOutClick = ()=> {\r\n         authService.signOut();\r\n         history.push(\"/\");\r\n        \r\n        };\r\n\r\n\r\n    // const getMyNweets= async()=>{\r\n    //     const nweets = await dbService\r\n    //         .collection(\"nweets\")\r\n    //         .where(\"creatorId\",\"==\",userObj.uid)\r\n    //         .orderBy(\"createdAt\")\r\n    //         .get();\r\n    //         //처음 orderBy를 할경우 에러가 뜬다. 인덱스를 만들어 줘야 한다.\r\n    //     console.log(nweets.docs.map(doc => doc.data()));\r\n    // }    \r\n\r\n    // useEffect(()=>{\r\n    //     getMyNweets();\r\n    // },[])  // 시범 삼아 보여준 코드\r\n    const onChange = (event) =>{\r\n        const{ target :{value}} = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (event) =>{\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName){\r\n           await userObj.updateProfile({\r\n                displayName:newDisplayName\r\n            });\r\n            refreshUser();\r\n        }\r\n    };    \r\n\r\n    return( \r\n        <div className=\"container\">\r\n        <form onSubmit={onSubmit} className=\"profileForm\">\r\n            <input onChange={onChange} type=\"text\" autoFocus placeholder=\"Display name\" value={newDisplayName} className=\"formInput\"/>\r\n            <input\r\n            type=\"submit\"\r\n            value=\"Update Profile\"\r\n            className=\"formBtn\"\r\n            style={{\r\n                marginTop: 10,\r\n            }}\r\n        />\r\n        </form>\r\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport {HashRouter as Router,Redirect,Route,Switch} from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nconst AppRouter = ({refreshUser, isLoggedIn,userObj}) =>{\r\n    \r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            <Switch>\r\n                {isLoggedIn ? \r\n               <div\r\n                style={{\r\n                    maxWidth: 890,\r\n                    width: \"100%\",\r\n                    margin: \"0 auto\",\r\n                    marginTop: 80,\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                }}\r\n             >\r\n                <Route exact path=\"/\">\r\n                    <Home userObj={userObj}/>\r\n                </Route>\r\n                <Route exact path=\"/profile\">\r\n                    <Profile userObj={userObj} refreshUser={refreshUser}/>\r\n                </Route>\r\n                <Redirect from=\"*\" to=\"/\" />\r\n                </div> :\r\n                <>\r\n                    <Route exact path=\"/\"> <Auth/></Route>\r\n                    <Redirect from=\"*\" to=\"/\" />\r\n                </>\r\n                }\r\n            </Switch>\r\n        </Router>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport fbase from \"fbase\";\nimport {authService} from \"fbase\";\n\nfunction App() {\n  \n  const [init,setInit] =useState(false);\n  const [userObj,setUserObj] =useState(null);\n  \n  useEffect(()=>{\n    authService.onAuthStateChanged((user)=>{\n      if(user){\n        //setUserObj(user); 전체 유저를 가져올경우 객체가 커진다.\n        setUserObj({\n          displayName:user.displayName,\n          uid:user.uid,\n          updateProfile: (args) => user.updateProfile(args)\n        })\n      }else{\n        setUserObj(null);\n      }\n      setInit(true);\n\n    });\n    //유저의 상태 변화를 감시 // 이렇게 하는 이유는 \n    //이렇게 하지 않으면  firebase가  다 로드 되기까지 기다려주질 않는다. 그래서 \n    // 계속  isLoggedIn이  null 상태가 된다.\n\n  },[]);\n  const refreshUser = () =>{\n    const user = authService.currentUser;\n    //setUserObj(authService.currentUser);\n    //이렇게 해주는 이유는  우리가 마이프로필 페이지에서 \n    // 정보를 수정하면  그 수정한 정보가 네비게이터에도 적용 되게 할려고\n    // 그런데  적용이 안되네??  이유는  authService.currentUser의 객체정보가 너무 커서\n    // 리엑트가   이 상태가 전 상태와 같은 지 다른 지 판단하기 헷갈린다. \n    // 그래서 첫번쨰 방법: object의 크기를 줄여준다.\n    setUserObj({\n      displayName:user.displayName,\n      uid:user.uid,\n      updateProfile: (args) => user.updateProfile(args)\n    })\n\n    //두번째 방법은  user전체를 받아오고  setUserObj(Object.assign({},user));\n    //이런식으로  빈객체에 user객체를 넣어 새로운 객체를 만들어서 리엑트가 인지하게 할 수 있다.\n    // 하지만  가끔 이상한 경우가 있음 첫번째 방법을 더 추천\n\n    \n  \n  }\n\n  \n  return (\n    <>\n     {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj}/> :\"Initializing...\"} \n    \n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}